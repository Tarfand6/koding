version: 2

defaults: &defaults

  resource_class: large

  docker:
    - image: koding/circle@sha256:33519ba755fd1a436e7891782a65b1d99b02fafebc104bd0e8ed9bc5e83d3e71

  working_directory: /koding

workflows:

  version: 2

  default:

    jobs:

      - dependencies

      - configure:
          requires:
            - dependencies

jobs:

  dependencies:

    <<: *defaults

    steps:

      - checkout

      - run: scripts/check_package_json_constraints.sh

      - restore_cache:
          keys:
            - node_modules-{{ checksum "package.json" }}
      - restore_cache:
          keys:
            - client-node_modules-{{ checksum "client/package.json" }}
      - restore_cache:
          keys:
            - landing-node_modules-{{ checksum "client/landing/package.json" }}

      - run:
          name: npm install
          command: npm install --unsafe-perm

      - save_cache:
          key: node_modules-{{ checksum "package.json" }}
          paths:
            - node_modules
      - save_cache:
          key: client-node_modules-{{ checksum "client/package.json" }}
          paths:
            - client/node_modules
      - save_cache:
          key: landing-node_modules-{{ checksum "client/landing/package.json" }}
          paths:
            - client/landing/node_modules

      - persist_to_workspace:
          root: /koding
          paths:
            - node_modules
            - client/node_modules
            - client/landing/node_modules

  configure:

    <<: *defaults

    steps:

      - checkout

      - attach_workspace:
          at: .

      - run:
          name: credentials
          command: env BRANCH=$CIRCLE_BRANCH scripts/copy-deployment-credentials.sh

      - run:
          name: configure
          command: ./configure --config dev --version $(git rev-parse --short HEAD) --host dev.koding.com:8090 --hostname dev.koding.com --countlyApiPort "80"
